@using SL.Util
@using SL.Data
@{
    if (!SL.Web.Service.UserService.CheckAuth())
    {
        return;
    }

    RequestUtil req = new RequestUtil();

    int page = req.Int("Page", defaultValue: 1);
    int pageSize = req.Int("PageSize", defaultValue: 10);
    string keywords = req.String("Keywords");
    string sort = req.String("Sort");
    bool isAsc = req.Bool("Asc", defaultValue: false);
    string role = req.String("role");
    string shopId = req.String("shopId");

    if (req.HasError)
    {
        Json.Write(new { success = false, msg = req.FirstError, errors = req.GetErrors() }, Output);
        return;
    }

    string where = "a.Deleted=0";
    List<object> parameters = new List<object>();
    if (!string.IsNullOrEmpty(keywords))
    {
        where += " and (AccountName like '%'+@p" + parameters.Count + "+'%' or Name like '%'+@p" + parameters.Count + "+'%')";
        parameters.Add(keywords);
    }
    if (!string.IsNullOrEmpty(role))
    {
        where += " and Role=@p" + parameters.Count;
        parameters.Add(req.Int("role"));
    }
    if (!string.IsNullOrEmpty(shopId))
    {
        where += " and a.ShopID=@p" + parameters.Count;
        parameters.Add(req.Int("shopId"));
    }

    IDictionary<string, bool> sortDic = new Dictionary<string, bool>{
        { string.IsNullOrEmpty(sort) ? "AccountName" : sort, isAsc }
    };

    int total;
    var data = SQL.QueryPage("AccountID",
        "AccountID,AccountName,a.ShopID,b.ShopName,Name,Role,Password",
        "Account a join Shop b on a.ShopID=b.ShopID",
        where, page, pageSize, parameters, out total, sortDic);

    Json.Write(new { success = true, data = data, total = total }, Output);
    return;
}
